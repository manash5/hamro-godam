import React from 'react';
import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import { FileText, Sparkles } from 'lucide-react';

const drawUserIcon = (doc, x, y) => {
  // Head
  doc.setFillColor(59, 130, 246); // blue
  doc.circle(x + 6, y + 8, 4, 'F');
  // Shoulders
  doc.ellipse(x + 6, y + 13, 5, 2.5, 'F');
};

const drawBoxIcon = (doc, x, y) => {
  doc.setFillColor(251, 191, 36); // yellow
  doc.rect(x + 2, y + 6, 8, 8, 'F');
  doc.setDrawColor(234, 179, 8);
  doc.line(x + 2, y + 10, x + 10, y + 10); // lid
};

const drawMoneyIcon = (doc, x, y) => {
  doc.setFillColor(239, 68, 68); // red
  doc.circle(x + 6, y + 10, 5, 'F');
  doc.setTextColor(255,255,255);
  doc.setFontSize(10);
  doc.text('$', x + 4.5, y + 13);
};

const drawRefreshIcon = (doc, x, y) => {
  doc.setDrawColor(34, 197, 94); // green
  doc.setLineWidth(1.2);
  doc.arc(x + 6, y + 10, 5, Math.PI * 0.2, Math.PI * 1.5, false);
  doc.line(x + 6, y + 5, x + 8, y + 7); // arrowhead
  doc.line(x + 6, y + 5, x + 4, y + 7);
};

const GenerateReportButton = ({ chartRef }) => {
  const handleGenerateReport = async () => {
    const doc = new jsPDF();
    // Header styling
    doc.setFillColor(44, 62, 80);
    doc.rect(0, 0, 210, 25, 'F');
    doc.setTextColor(255, 255, 255);
    doc.setFontSize(20);
    doc.text('Dashboard Analysis Report', 105, 17, { align: 'center' });

    // Metrics grid (icons only, no circles)
    const metrics = [
      { label: 'Customers', value: '30,567', change: '-5%', color: '#3b82f6', changeColor: '#ef4444', drawIcon: drawUserIcon },
      { label: 'Products', value: '3,037', change: '+18%', color: '#fbbf24', changeColor: '#22c55e', drawIcon: drawBoxIcon },
      { label: 'Sales', value: '20,509', change: '+33%', color: '#ef4444', changeColor: '#22c55e', drawIcon: drawMoneyIcon },
      { label: 'Refunds', value: '21,647', change: '-12%', color: '#22c55e', changeColor: '#ef4444', drawIcon: drawRefreshIcon },
    ];
    // Draw grid background
    doc.setFillColor(241, 245, 249); // #f1f5f9
    doc.roundedRect(10, 30, 190, 32, 4, 4, 'F');
    // Draw metrics
    metrics.forEach((m, i) => {
      const x = 18 + i * 47;
      const y = 34;
      // Draw icon
      m.drawIcon(doc, x, y);
      // Value
      doc.setFontSize(15);
      doc.setTextColor(17, 24, 39); // #111827
      doc.setFont('helvetica', 'bold');
      doc.text(m.value, x + 20, y + 12);
      // Label
      doc.setFontSize(10);
      doc.setFont('helvetica', 'normal');
      doc.setTextColor(100, 116, 139); // #64748b
      doc.text(m.label, x + 20, y + 18);
      // Change
      doc.setFontSize(10);
      doc.setTextColor(...(m.changeColor === '#22c55e' ? [34,197,94] : [239,68,68]));
      doc.text(m.change, x + 20, y + 24);
    });

    // Highlights section
    doc.setFillColor(236, 253, 245); // #ecfdf5
    doc.roundedRect(10, 68, 190, 18, 3, 3, 'F');
    doc.setFontSize(12);
    doc.setTextColor(16, 185, 129); // #10b981
    doc.setFont('helvetica', 'bold');
    doc.text('Highlights', 15, 78);
    doc.setFont('helvetica', 'normal');
    doc.setFontSize(11);
    doc.setTextColor(55, 65, 81); // #374151
    doc.text(`Most Popular Product: Yew Plum Pine (98k sold)`, 15, 84);
    doc.text(`Highest Sales Month: Mar (310 units)`, 110, 84);

    // Chart section
    if (chartRef.current) {
      const chartCanvas = await html2canvas(chartRef.current, { backgroundColor: null, scale: 2 });
      const imgData = chartCanvas.toDataURL('image/png');
      doc.setFont('helvetica', 'bold');
      doc.setFontSize(13);
      doc.setTextColor(44, 62, 80);
      doc.text('Units Sold Chart:', 10, 100);
      doc.addImage(imgData, 'PNG', 10, 105, 190, 60);
    }

    // Footer
    doc.setFontSize(10);
    doc.setTextColor(150, 150, 150);
    doc.text('Generated by Hamro Godam Dashboard', 10, 285);

    doc.save('dashboard-analysis-report.pdf');
  };

  return (
    <button
      className="group relative overflow-hidden px-6 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl hover:shadow-blue-500/25 transition-all duration-300 transform hover:scale-105 hover:-translate-y-0.5"
      style={{ background: 'linear-gradient(to right, #3b82f6, #6366f1)', color: '#fff' }}
      onClick={handleGenerateReport}
    >
      <div className="absolute inset-0" style={{ background: 'linear-gradient(to right, transparent, rgba(255,255,255,0.2), transparent)', transform: 'skewX(-12deg) translateX(-100%)' }}></div>
      <div className="relative flex items-center space-x-2">
        <FileText className="w-4 h-4 group-hover:rotate-3 transition-transform duration-300" />
        <span>Generate Report</span>
        <Sparkles className="w-4 h-4 opacity-70 group-hover:opacity-100 group-hover:scale-110 transition-all duration-300" />
      </div>
    </button>
  );
};

export default GenerateReportButton; 